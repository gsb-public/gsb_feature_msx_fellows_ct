<?php
/**
 * @file
 * Code for the MSx Fellows feature.
 */

include_once 'gsb_feature_msx_fellows_ct.features.inc';

/**
 * Implements hook_field_formatter_info().
 *
 * Define our own Academic Degrees field collection formatter.
 */
function gsb_feature_msx_fellows_ct_field_formatter_info() {
  return array(
    'gsb_academic_degrees_default_format' => array(
      'label' => t('Field Collection Academic Degrees'),
      'field types' => array('field_collection'),
    ),
  );
}

/**
 * Implements hook_field_formatter_view().
 *
 * Render Academic Degrees field collection.
 */
function gsb_feature_msx_fellows_ct_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();

  // Get a metadata wrapper for the entity.
  $wrapper = entity_metadata_wrapper($entity_type, $entity);

  // Loop through each item, adding list items.
  foreach ($items as $delta => $item) {
    if ($field_collection = $wrapper->field_academic_degrees->get($delta)) {
      // Required fields are included by default.
      $parts = array(
        $field_collection->field_degree_type_other->value(),
      );

      $focus = $field_collection->field_degree_focus->value();
      if (!empty($focus)) {
        $parts[] = $focus;
      }
      $parts[] = $field_collection->field_university->value();
      // Add optional fields.
      $year = $field_collection->field_year->value();
      if (!empty($year)) {
        $parts[] = format_date($year, 'year');
      }
      // Concatenate fields.
      $degrees[] = implode(', ', $parts);
    }
  }

  if (!empty($items)) {
    $element[] = array(
      '#markup' => theme('item_list', array('items' => $degrees)),
    );
  }

  return $element;
}

function gsb_feature_msx_fellows_ct_form_views_content_views_panes_content_type_edit_form_alter(&$form, &$form_state, $form_id) {
  if($form_id == 'views_content_views_panes_content_type_edit_form' && $form['#id'] == 'views-content-views-panes-content-type-edit-form' && $form_state['view']->name == 'msx_fellows') {
   // $form['exposed']['filter-secondary']['#access'] = false;
  }
 
}

/**
 * Implements hook_node_presave().
 */
function gsb_feature_msx_fellows_ct_node_presave($node) {

  if ($node->type != 'msx_fellows') {
    return;
  }
  $node->field_instance_text['und'][0]['value'] = substr($node->field_year['und'][0]['value'],0,4);
 
}

function gsb_feature_msx_fellows_ct_form_msx_fellows_node_form_alter(&$form, &$form_state, $form_id) {
  // you can access the type:
  $type = $form['#node']->type;
  if ($type == 'msx_fellows') { 
    $form['field_instance_text']['#access'] = 0;
  }
}